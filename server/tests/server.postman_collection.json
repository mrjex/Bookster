{
	"info": {
		"_postman_id": "1a46d3fa-ab79-4afa-833b-9e93650a466d",
		"name": "WebProject",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29447636",
		"_collection_link": "https://universal-zodiac-928995.postman.co/workspace/universal-zodiac-928995-Workspa~39096c1f-028e-4714-86c2-e7534a39622a/collection/29447636-1a46d3fa-ab79-4afa-833b-9e93650a466d?action=share&source=collection_link&creator=29447636"
	},
	"item": [
		{
			"name": "Review",
			"item": [
				{
					"name": "Read Reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Ratings test\", () => {\r",
									"\r",
									"    for (var i = 0; i < response.length; i++)\r",
									"    {\r",
									"        // Content: Maximum characters - 100\r",
									"        pm.expect(response[i].content.length).to.be.below(100);\r",
									"\r",
									"        // Ratings: From 1 to 5\r",
									"        pm.expect(response[i].rating).to.be.below(6);\r",
									"        pm.expect(response[i].rating).to.be.above(0);\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/reviews",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"My second review :DD\",\r\n    \"rating\": 9,\r\n    \"isbn\": \"695943\",\r\n    \"username\": \"haha\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Content Of Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"updated - jex bro. G - mr jex Friday Grind\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/reviews/username/haha/books/695943",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reviews",
								"username",
								"haha",
								"books",
								"695943"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Read Users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"/*\r",
									"const user = response.find(item => item.username === \"myBro123\");\r",
									"\r",
									"pm.test(\"User is myBro123\", () => {\r",
									"    pm.expect(user.username).to.eql(\"myBro123\");\r",
									"});\r",
									"*/\r",
									"\r",
									"for (var i = 0; i < response.length; i++)\r",
									"{\r",
									"    pm.expect(response[i].age).to.be.above(4);\r",
									"}\r",
									"\r",
									"// const responseText = pm.response.text();\r",
									"\r",
									"// pm.test(\"Body matches string\", () => {\r",
									"//     pm.expect(responseText).to.include(\"username\");\r",
									"//     pm.expect(responseText).to.include(\"password\");\r",
									"//     pm.expect(responseText).to.include(\"age\");\r",
									"//     pm.expect(responseText).to.include(\"books\");\r",
									"//     pm.expect(responseText).to.include(\"wishlist\");\r",
									"// });\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"jex\",\r\n    \"password\": \"password\",\r\n    \"age\": 10,\r\n    \"books\": \"mybooks\",\r\n    \"wishlisht\": \"mywishlist\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User By Username",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/lol",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"lol"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseText = pm.response.text();\r",
									"\r",
									"pm.test(\"Body matches string\", () => {\r",
									"    pm.expect(responseText).to.include(\"username\");\r",
									"    pm.expect(responseText).to.include(\"password\");\r",
									"    pm.expect(responseText).to.include(\"age\");\r",
									"    pm.expect(responseText).to.include(\"books\");\r",
									"    pm.expect(responseText).to.include(\"wishlist\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"T325577\",\r\n    \"password\": \"pares345\",\r\n    \"age\": 10,\r\n    \"books\": [\r\n        {\r\n            \"title\": \"The Rational Male\",\r\n            \"author\": \"Erik Carlsson\",\r\n            \"isbn\": \"34544\",\r\n            \"pages\": 380\r\n        },\r\n        {\r\n            \"title\": \"Financial IQ\",\r\n            \"author\": \"Robert Kiyosaki\",\r\n            \"isbn\": \"632443\",\r\n            \"pages\": 328\r\n        }\r\n    ],\r\n    \"wishlist\": [\r\n        {\r\n            \"title\": \"Positive Masculinity\",\r\n            \"author\": \"Joel Mattsson\",\r\n            \"isbn\": \"4433336\",\r\n            \"pages\": 503\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Book To User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Sigma Male Bible\",\r\n    \"author\": \"Will Budson\",\r\n    \"isbn\": \"123\",\r\n    \"pages\": 98\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/lol/books/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"lol",
								"books",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User By Username",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/lol",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"lol"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}